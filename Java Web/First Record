B/S架构的好处：
	客户端使用统一的浏览器。
	服务端基于统一的HTTP协议。
HTTP协议采用无状态的短连接的通信方式，通常情况下，一次请求就完成一次数据交互，通常也对应一个业务逻辑，然后这次通信连接就断开了。
当用户在浏览器输入www.taobao.com这个URL时。
	首先，请求DNS将这个域名解析成对应的IP地址。
	然后，根据这个IP地址在互联网上找到对应的服务器，想这个服务器发起一个GET请求，由这个服务器决定返回默认的数据资源给访问的用户。
	而服务端还有复杂的业务逻辑：服务器可能有很多台，根据负载均衡设备来平均分配所有用户的请求，从而决定具体是由哪台服务器来处理请求。
	当数据返回浏览器时，浏览器解析数据发现还有一些静态资源时又会发起另外的HTTP请求，而这些请求还可能会在CND上，那么CND服务器又会处理这个用户的请求。
CND：Content Delivery Network， 即内容分布网络。其目的是通过在现有的Internet中增加一层心的网络架构，将网络的内容发布到最接近用户的网络“边缘”，使用户可以就近取得所需的内容，解决Internet网络拥塞状况，提高用户访问网站的响应速度。
互联网上所有的资源都要用一个URL来表示；必须基于HTTP协议与服务端交互；数据展示必须在浏览器中进行。
浏览器在建立Socket连接之前，必须根据地址栏里输入的URL的域名DNS解析出IP地址，再根据这个IP地址和默认80端口雨远程服务器建立Socket连接，然后浏览器根据这个URL组装成一个GET类型的HTTP请求头，通过outputStream.write发送到目标服务器，服务器等待inputStream.read返回数据，最后断开这个连接。
一句话，发起一个HTTP请求的过程就是建立一个Socket通信的过程。即，发起一个HTTP连接本质上就是建立一个Socket连接。
B/S网络架构的核心是HTTP协议。HTTP Header控制着互联网上成千上万用户的数据传输。
HTTP请求头：
	Accept－Charset：用于指定客户端接受的字符集。
	Accept－Encoding：用户指定可接受的内容编码，如Accept－Encoding：gizp.deflate
	Accept－Language：用于指定一种自然语言，如Accept－Language：zh－cn
	Host：用户指定被请求资源的Internet主机和端口号，如Host：www.taobao.com
	User－Agent：客户端将它的操作系统、浏览器和其他属性高速服务器
	Connection：当前连接是否保持，如Connection：Keep－Alive
HTTP响应头：
	Server：使用的服务器名称，如Server：Apache/1.3.6（Unix）
	Content－Type：用来指明发送给接收者的实体征文的媒体类型，如Content－Type：text/html；charset＝GBK
	Content－Encodeing和Content－Language与Accept－Encoding和Language对应
	Content－Length：指明实体正文的长度，用以字节方式存储的十进制数字来表示
	Keep－Alive：保持连接的时间，如Keep－Alive：timeout＝5，max＝120
常见的状态码：
	200 客户端请求成功
	302 临时跳转，跳转的地址通过Location指定
	400 客户端请求有语法错误，不能被服务器识别
	403 服务器收到请求，但是拒绝提供服务
	404 请求的资源不存在
	500 服务器发生不可预测的错误
Cache－Control/Pragma这两个HTTP Head字段用于指定所有缓存机制在整个请求/响应链中必须服从的指令，如果知道该页面是否为缓存，不仅可以控制浏览器，还可以控制和HTTP协议相关的缓存或代理服务器。
HTTP Head字段的可选值
	Public 所有内容都将被缓存，在响应头中设置
	Private 内容只缓存到私有缓存中，在响应头中设置
	no－cache 所有内容都不会被缓存，在请求头和响应头中设置
	no－store 所有内容都不会被缓存到缓存火Internet临时文件中，在响应头中中设置
	must－revalidation/proxy－revalidation 如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证，在请求头中设置
	max－age＝xxx 缓存的内容将在xxx秒后失效，这个选项只在HTTP1.1中可用，和Last－Modified一起使用时优先级较高，在响应头中设置
Expires
	通常的使用格式是Expires：Sat，25 Feb 2012 12:22:17 GMT，后面跟着一个日期和时间，超过这个时间值后，缓存的内容将失效，也就是浏览器在发出请求之前检查这个页面的这个字端，看该页面是否已经过期了，过期了就重新向服务器发送请求。
Last－Modified
	Last－Modified字段一般用于表示一个服务器上的资源的最后修改时间，资源可以是静态（静态内容自动加上Last－Modified字段）或这个动态的内容（如Servlet提供了一个getLastModified方法用于检查某个动态内容是否已经更新），通过这个最后修改时间可以判断当前请求的资源是否是最新的。
Etag
	Etag字段的作用是让服务端给每个页面分配一个唯一的编号，然后通过这个编号来区分当前这个页面是否是最新的。

DNS域名解析过程
	1.浏览器会检查缓存中有没有这个域名对应的解析过的IP地址，如果缓存中有，这个解析过程就将结束。域名被缓存的时间限制可以通过TTL属性来设置。
	2.如果浏览器缓存中没有，浏览器会查找操作系统缓存中是否有这个域名对应的DNS解析结果。其实操作系统也会有一个域名解析的过程，在Windows中可以通过C;\Windows\System32\drivers\etc\hosts文件来设置，可以将任何域名解析到任何能够访问的IP地址。正式因为这种本地DNS解析的规程，所以黑客就有可能通过修改用户的域名解析来把特定的域名解析到它指定的IP地址上，导致这些域名被劫持。
	3.如果以上两个过程都无法解析时，操作系统会把这个域名发送给LDNS，也就是本地区的域名服务器。通过 cat /etc/resolv.conf来查看。这里显示的专门的域名解析服务器性能都很好，一般都会缓存域名解析结果，当然缓存时间是受域名的失效时间控制的，一般缓存空间不是影响域名失效的主要因素，80%的域名解析都是在LDNS完成。
	4.如果LDNS仍然没有命中，就直接到Root Server域名服务器请求解析。
	5.根域名服务器返回给本地域名服务器一个所查询域的主域名服务器（gTLD Server）地址。gTLD时国籍顶级域名服务器，如.com、.cn、.org等，全球只有13台左右。
	6.本地域名服务器（Local DNS Server）再向上一步返回的gTLD服务器发送请求。
	7.接受请求的gTLD服务器查找并返回此域名对应的Name Server域名服务器的地址，这个Name Server通常就是你注册的域名服务器，例如在某个域名服务提供商申请的域名，那么这个域名解析任务就由这个域名提供商的服务器来完成。
	8.Name Server域名服务器会查询存储的域名和IP的映射关系表，正常情况下都根据域名得到目标IP记录，连同一个TTL值返回给DNS Server域名服务器。
	9.返回该域名对应的IP和TTL值，Local DNS Server会缓存这个域名和IP的对应关系，缓存的时间由TTL值控制。
	10.把解析的结果返回给用户，用户根据TTL值缓存在本地系统缓存中，域名解析过程结束。
在Java应用中JVM也会缓存DNS的解析结果，这个缓存是在InetAddress类中完成的，而且这个缓存时间还比较特殊，一种是正确解析结果缓存，另一种是失败的解析结果缓存。这两个缓存时间由两个配置项控制，配置项实在%JAVA_HOME%\lib\security\java.security文件中配置的。两个配置项分别是networkaddress.cache.ttl和networkaddress.cache.negative.ttl，它们的默认值分别是－1（永不失效）和10（缓存10秒）。
如果使用InetAddress类解析域名时，一定要是单例模式，不然会有严重的性能问题，如果每次都创建InetAddress实例，每次都要进行一次完整的域名解析，非常耗时。

域名解析记录分为：
A记录，A代表Address，用来指定域名对应的IP地址，如将item.taobao.com指定到115.238.23.241。A记录可以将多个域名解析到一个IP地址，但是不能将一个域名解析到多个IP地址。
MX记录表示的是Mail Exchange，就是可以将某个域名下的邮件服务器指向自己的Mail Server，如taobao.com域名的A记录IP是115.238.25.245，如果MX记录设置为115.238.25.246，是xxx@taobao.com的邮件路由，DNS会将邮件发送到115.238.25.246所在的服务器，而正常通过Web请求的话依然解析到A记录的IP地址。
CNAME记录，全称是Canonical Name（别名解析）。所谓的别名解析就是可以为一个域名设置一个或者多个别名。
NS记录，为某个域名指定DNS解析服务器，也就是这个域名有指定的IP地址的DNS服务器去解析。
TXT记录，为某个主机名或域名设置说明。

CDN也就是内容分布网络（Content Delivery Network），它是构筑在现有Internet上的一种先进的流量分配网络。其目的是通过在现有的Internet中增加一层新的网络架构，将网络的内容发布到最接近用户的网络“边缘”，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。比镜像更智能，CDN＝镜像＋缓存＋整体负载均衡。因此CDN可以明显提高Internet中信息流动的效率。
